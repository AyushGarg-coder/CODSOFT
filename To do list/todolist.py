# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'todolist.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os
os.chdir(r"C:\Users\Omen\Documents\Python\codesoft")
class Ui_MainWindow(object):
    def addtask(self):
        text=self.lineEdit.text()
        if text!="":
            self.listWidget.addItem(text)
            file= open('Todolist.txt','a')
            file.write(f'{text}\n')
            file.close()
            self.lineEdit.clear()
        else:
             self.show_dlg("Task Cannot be blank")
        
    def deltask(self):
        selected_item=self.listWidget.currentItem()
        if selected_item!="":
            row=self.listWidget.currentRow()
            file=open('Todolist.txt','r')
            lines=file.readlines()
            file.close()
            file1=open('Todolist.txt','w')
            for row1 in lines:
                # print(row1)
                # print(selected_item.text())
                if(row1.strip("\n")!=selected_item.text()):
                    file1.write(str(row1))
                else:
                    continue
            file1.close()
            self.listWidget.takeItem(row)
        
    def update_task(self):
        selected_item=self.listWidget.currentItem()
        if selected_item is not None:
            text,ok=QtWidgets.QInputDialog.getText(MainWindow,"EDIT","Enter the New Task")
            if ok:
                row=self.listWidget.currentRow()
                self.listWidget.takeItem(row)
                file=open('Todolist.txt','r')
                lines=file.readlines()
                file.close()
                file1=open('Todolist.txt','w')
                for row1 in lines:
                    if(row1.strip('\n')==selected_item.text()):
                        file1.write(f'{text}\n')
                    else:
                        file1.write(row1)
                file1.close()
                self.listWidget.insertItem(row,text)

    def refresh(self):
        file=open('Todolist.txt','r')
        lines=file.readlines()
        self.listWidget.clear()
        for x in lines:
            item=QtWidgets.QListWidgetItem(x.rstrip('\n'))
            self.listWidget.addItem(item)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(900, 666)
        MainWindow.setStyleSheet("background-color: rgb(0, 64, 191);\n"
"color:white;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color:rgb(255, 0, 4);")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(20)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.lineEdit.setFont(font)
        self.lineEdit.setAcceptDrops(False)
        self.lineEdit.setStyleSheet("border-color: black;\n"
"background-color:white;\n"
"color:black;\n"
"margin-left:18px;\n"
"margin-right:18px;\n"
"padding:6px;")
        self.lineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit.setCursorMoveStyle(QtCore.Qt.LogicalMoveStyle)
        self.lineEdit.setClearButtonEnabled(False)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout.addWidget(self.lineEdit)
        self.add_btn = QtWidgets.QPushButton(self.centralwidget,clicked=lambda:self.addtask())
        self.add_btn.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.add_btn.setFont(font)
        self.add_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.add_btn.setStyleSheet("background-color: rgb(0, 216, 104);\n"
"color:white;\n"
"margin-left:225%;\n"
"margin-right:225%;\n"
"padding-top:12px;\n"
"padding-bottom:12px;")
        self.add_btn.setObjectName("add_btn")
        self.verticalLayout.addWidget(self.add_btn)
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Microsoft Sans Serif")
        font.setPointSize(14)
        self.listWidget.setFont(font)
        self.listWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color:black;\n"
"margin-left:18px;\n"
"margin-right:18px;")
        self.listWidget.setObjectName("listWidget")
        self.verticalLayout.addWidget(self.listWidget)
        self.del_btn = QtWidgets.QPushButton(self.centralwidget,clicked=lambda:self.deltask())
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.del_btn.sizePolicy().hasHeightForWidth())
        self.del_btn.setSizePolicy(sizePolicy)
        self.del_btn.setBaseSize(QtCore.QSize(0, 0))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.del_btn.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.del_btn.setFont(font)
        self.del_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.del_btn.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.del_btn.setStyleSheet("background-color: rgb(255, 0, 0);\n"
"margin-left:225%;\n"
"margin-right:225%;\n"
"padding-top:12px;\n"
"padding-bottom:12px;\n"
"color:white;")
        self.del_btn.setObjectName("del_btn")
        self.verticalLayout.addWidget(self.del_btn)
        self.update_btn = QtWidgets.QPushButton(self.centralwidget,clicked=lambda:self.update_task())
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.update_btn.setFont(font)
        self.update_btn.setStyleSheet("background-color: rgb(255, 255, 127);\n"
"margin-left:225%;\n"
"margin-right:225%;\n"
"padding-top:12px;\n"
"padding-bottom:12px;\n"
"color:black;")
        self.update_btn.setObjectName("update_btn")
        self.verticalLayout.addWidget(self.update_btn)
        self.gridLayout.addLayout(self.verticalLayout, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.refresh()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "To Do List "))
        self.label.setText(_translate("MainWindow", "MY TASK"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "ENTER YOUR TASK"))
        self.add_btn.setText(_translate("MainWindow", "ADD TASK"))
        self.del_btn.setText(_translate("MainWindow", "DELETE TASK"))
        self.update_btn.setText(_translate("MainWindow", "UPDATE TASK"))

    def show_dlg(self,text):
         msg=QtWidgets.QMessageBox()
        #  msg.setIcon(QtWidgets.QMessageBox.warning)
         msg.setWindowTitle("Warning")
         msg.setText(text)
         msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
         msg.exec_()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
